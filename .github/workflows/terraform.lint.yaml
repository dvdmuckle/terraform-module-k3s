---
name: Terraform HCL validation

on:
  workflow_call:
    inputs:
      terraform_workdir:
        description: Working directory where Terraform files are
        required: false
        default: "."
        type: string

env:
  TF_IN_AUTOMATION: "yes"

jobs:
  # Checks if your TF files are in a canonical format and without HCL issues
  terraform_validate:
    name: Terraform files validation
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 # tag=v3.1.0
      - uses: hashicorp/setup-terraform@bbe167fbdaa1a3bd046bdd70eba9dd3dddcca99c # tag=v2.0.2
        with:
          terraform_version: ${{ inputs.terraform_version }}
      - uses: terraform-linters/setup-tflint@ba6bb2989f94daf58a4cc6eac2c1ca7398a678bf # tag=v3.0.0

      # --- `terraform fmt`
      - name: Check if all Terraform configuration files are in a canonical format ${{ steps.pre.outputs.workdir }}
        id: fmt
        run: terraform fmt -check -recursive -diff -no-color
        working-directory: ${{ inputs.terraform_workdir }}

      # --- `terraform init`
      - name: Initialize Terraform working directory ${{ steps.pre.outputs.workdir }}
        id: init
        run: terraform init -no-color -backend=false
        working-directory: ${{ inputs.terraform_workdir }}

      # --- `terraform validate`
      - name: Validate the configuration files ${{ steps.pre.outputs.workdir }}
        id: validate
        run: terraform validate -no-color
        working-directory: ${{ inputs.terraform_workdir }}

      # --- `terraform lint`
      - name: Lint the configuration files ${{ steps.pre.outputs.workdir }}
        id: lint
        run: tflint --format compact
        working-directory: ${{ inputs.terraform_workdir }}
